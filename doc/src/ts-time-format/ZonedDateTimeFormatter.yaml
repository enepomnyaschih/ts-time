# MIT License
#
# Copyright (c) 2019-2022 Egor Nepomnyaschih
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

symbols:
  default:
    kind: class
    extends:
      - file: ts-time-format/TemporalFormatter
        typevars: '%ZonedDateTime'
    description: |
      Formatter of %ZonedDateTime to a string. You may initialize a formatter explicitly by using %of method,
      or implicitly by using %ofPattern method. See %ZONED_DATE_TIME_COMPILERS for supported pattern characters. See
      %parsePattern for general pattern writing guidelines.

    staticMethods:
      of:
        signature: |
          (components: %TemporalFormatComponent<%ZonedDateTime>[]): %ZonedDateTimeFormatter
        params:
          components: Ordered array of format components.
        returns: Formatter.
        description: Constructs a formatter explicitly by components.

      ofPattern:
        signature: |
          (pattern: string, compilers: Dictionary<%ZonedDateTimeCompiler> = %ZONED_DATE_TIME_COMPILERS): %ZonedDateTimeFormatter
        params:
          pattern: Pattern string.
          compilers: Dictionary from supported pattern characters to the respective compilers.
        returns: Formatter.
        description: Constructs a formatter implicitly by pattern. See %parsePattern for details.

    references:
      T:
        file: ts-time/ZonedDateTime
        label: ZonedDateTime

  ZonedDateTimeCompiler:
    kind: interface
    extends:
      - file: ts-time-format/TemporalCompiler
        typevars: '%ZonedDateTime'
    description: '%TemporalCompiler for %ZonedDateTime.'
    references:
      T:
        file: ts-time/ZonedDateTime
        label: ZonedDateTime

  ZONED_DATE_TIME_COMPILERS:
    type: Dictionary<%ZonedDateTimeCompiler>
    description: |
      <p>Default dictionary from pattern character to the respective compiler. Union of interface-compatible adapters
      around %DATE_COMPILERS, %TIME_COMPILERS and %OFFSET_COMPILERS, plus %ZONE_ID_COMPILER.</p>

  ZONE_ID_COMPILER:
    type: '%ZonedDateTimeCompiler'
    description: |
      <p>Writes zonedDateTime.%zone. Only length of 1 is supported.</p>
      <p>Default pattern character is "V".</p>
    references:
      zone:
        file: ts-time/ZonedDateTime
        member: zone
